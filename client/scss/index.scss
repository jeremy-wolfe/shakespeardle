@use 'color';
@use 'animation';

@import url('https://fonts.googleapis.com/css2?family=Cinzel:wght@400;600&family=Lato:ital,wght@0,300;0,400;1,300&display=swap');

$padding: var(--padding);

:root {
	--padding: 30px;
}

html, body {
	width: 100%;
	height: 100%;
	margin: 0;
	padding: 0;
	font-size: 18px;
}

body {
	background: color.$background;
	color: color.$foreground;
	font-family: 'Lato', sans-serif;
	font-weight: 300;
	user-select: none;
}

#container {
	display: flex !important;
	flex-direction: column;
	align-items: center;
	width: 100%;
	min-height: 100%;
}

#container > header {
	padding: $padding;
	text-align: center;

	h1 > span {
		display: inline-block;
		text-align: center;
		overflow: hidden;
		vertical-align: bottom;
		animation: reveal 1500ms 500ms both ease-in-out;
	}
	p {
		animation: notify 500ms 1s both ease-in-out;
	}
}

main {
	flex: 1 1 auto;
	display: flex;
	align-items: center;
	justify-content: center;
	padding: 0 $padding;

	ul {
		padding: 2px;
		border: 1px solid transparent;
		transform-style: preserve-3d;

		&.complete li {
			background: color.$grayMid;
		}

		&.invalid {
			animation: invalid 2s;
		}

		li {
			width: 2em;
			height: 2em;
			line-height: 2em;
			font-family: 'Cinzel', serif;
			font-size: 2rem;
			font-weight: 600;
			text-align: center;
			border: 1px solid color.$grayMid;
			opacity: 0;

			&.active {
				box-shadow: inset 0 -10px 5px rgba(#fff, 0.2);
			}
		}

		&.animate li {
			animation: flip 500ms both ease-in-out;

			@for $i from 1 through 8 {
				&:nth-child(#{$i + 1}) {
					animation-delay: #{$i * 100}ms;
				}
			}
		}

		&:last-child {
			li {
				border: none;
				background: none;
				animation: none;
				transition: opacity 3s;
			}
			&.show li {
				opacity: 1;
			}
		}
	}
}

#container > footer {
	flex: 0 1 200px;
	display: flex;
	flex-direction: column;
	padding: $padding;
	box-sizing: border-box;
	animation: slide 500ms 1s both ease-in-out;

	ul {
		flex: 1 1 auto;
		grid-template-columns: repeat(20, 1fr);

		li {
			grid-column-end: span 2;
			display: flex;
			align-items: center;
			justify-content: center;
			padding: 0 0.5em;
			min-height: 3em;
			text-align: center;
			font-weight: 400;
			background: color.$grayLight;
			cursor: pointer;
			user-select: none;

			&:nth-child(11) {
				grid-column-start: 2;
			}
			&#enter, &#backspace {
				grid-column-end: span 3;
			}

			&:hover {
				background-color: rgba(color.$grayLight, 0.8);
			}

			&.disabled {
				background: color.$grayDark;
			}

			svg {
				width: 2em;
				height: 1.5em;
			}
		}
	}
}

#container > aside {
	position: fixed;
	left: 50%;
	margin-left: -300px;
	width: 600px;
	bottom: 0;
	padding: $padding;
	background: color.$grayMid;
	text-align: center;
	box-sizing: border-box;
	opacity: 0;
	transform: translateY(100%);
	transition: transform 500ms, opacity 500ms;
	z-index: 10;
	border-radius: 10px 10px 0 0;
	box-shadow: -5px 0 10px rgba(#000, 0.5);

	&.show {
		opacity: 1;
		transform: translateY(0%);
	}

	ul {
		grid-template-columns: repeat(4, 1fr);
		max-width: 500px;
		margin: 0 auto;
		padding: $padding;

		li {
			b {
				display: block;
				font-size: 2rem;
			}
		}
	}
	footer {
		padding: $padding;

		> div {
			display: flex;
			flex-direction: row;
			align-items: center;
			justify-content: center;
			padding-bottom: $padding;
		}
		small {
			display: block;
			font-size: 0.8rem;
			line-height: 1.25em;
			margin-top: 10px;
			color: color.$foreground;
		}
	}
}

#shade {
	position: fixed;
	left: 0;
	right: 0;
	top: 0;
	bottom: 0;
	background: #000;
	z-index: 9;
	opacity: 0;
	transform: translateY(-100%);
	transition: opacity 500ms, transform 0ms 500ms;
	z-index: 9;

	&.show, #loading + & {
		opacity: 0.5;
		transform: translateY(0%);
		transition: opacity 500ms, transform 0ms;
	}
}

h1, h2 {
	margin: 0;
	font-family: 'Cinzel', serif;
	font-weight: 400;
	line-height: 1.25em;
}

h1 {
	font-size: 2rem;
}

h2 {
	font-size: 1.75rem;
}

p {
	margin: 0 0 0.5em;
}

b {
	font-weight: 400;
}

a {
	font-weight: 400;
	color: color.$link;
	text-decoration: none;

	&:hover {
		color: color.$grayLight;
	}
}

ul {
	list-style: none;
	position: relative;
	display: grid;
	gap: 5px;
	margin: 0;
	padding: 0;
	
	li {
		display: block;
		margin: 0;
		padding: 0;
		border-radius: 5px;
		transition: background-color 500ms;

		&.valid-letter {
			background: color.$validLtr !important;
			border-color: color.$validLtr;
		}
		&.valid-position {
			background: color.$validPos !important;
			border-color: color.$validPos;
		}
	}
}

.close, #stats-btn, #grid-toggle-btn {
	position: absolute;
	top: 10px;
	padding: 10px;
	cursor: pointer;
	transition: opacity 500ms;

	&.disabled {
		pointer-events: none;
		opacity: 0.25;
	}
}

.close {
	right: 10px;

	svg {
		width: 20px;
		height: 20px;
		stroke: color.$foreground;
		fill: none;
	}
}

.close {
	svg {
		stroke-width: 5px;
	}
}

#grid-toggle-btn, #stats-btn {
	svg {
		width: 20px;
		height: 20px;
		stroke: none;
		fill: currentColor;
	}
}

#grid-toggle-btn {
	left: 10px;

	&:not(.random) svg:first-child {
		display: none;
	}
	&.random svg:last-child {
		display: none;
	}
}

#stats-btn {
	right: 10px;
}

img {
	display: block;
}

.btn {
	display: inline-flex;
	flex-direction: row;
	align-items: center;
	justify-content: center;
	margin: 10px;
	padding: 0 25px;
	height: 50px;
	line-height: 50px;
	border-radius: 25px;
	font-weight: 400;
	color: color.$foreground;
	cursor: pointer;

	svg, img {
		width: auto;
		height: 1.25em;
		margin-right: 10px;
	}

	svg {
		fill: currentColor;
		stroke: none;
	}

	&.github {
		background: #000;
		color: #fff;

		&:hover {
			background: #222;
		}
	}
	&.share {
		background: color.$validPos;

		&:hover {
			background: lighten(color.$validPos, 2%);
		}
	}
	&.dice {
		position: relative;
		top: 3px;
		margin: 0 10px;
		padding: 0 15px;
		background: #333;

		&:hover {
			background: #555;
		}

		svg {
			width: 1.5em;
			margin-right: 0;
		}
	}
}

.notify {
	position: fixed;
	left: 50%;
	top: 50%;
	width: 300px;
	height: 50px;
	line-height: 50px;
	text-align: center;
	margin: -25px 0 0 -150px;
	padding: 0 30px;
	background: color.$grayMid;
	border-radius: 25px;
	box-shadow: 0 5px 10px rgba(#000, 0.5);
	z-index: 11;
	box-sizing: border-box;
	animation: notify 250ms;
}

@import 'responsive';
